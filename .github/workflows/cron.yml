name: Generate HTML

on:
  push:
    branches: [main]
  workflow_dispatch:
#   schedule:
#     - cron: "5/15 * * * *"

jobs:
  build:
    name: Generate DN42 Map
    if: "github.event_name != 'push' || !contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-24.04

    steps:
      - uses: actions/checkout@v4

      - uses: actions/checkout@v4
        with:
          path: pages
          ref: pages
          ssh-key: ${{ secrets.KEY }}
          repository: iedon/dn42_map

      - uses: actions/setup-go@v5
        with:
          go-version: '1.24.1'

      - uses: actions/setup-node@v4
        with:
            node-version: '22.14.0'

      - env:
          GIT_DN42_TOKEN: ${{ secrets.GIT_DN42_TOKEN }}
          MRT_BASIC_AUTH_USER: ${{ secrets.MRT_BASIC_AUTH_USER }}
          MRT_BASIC_AUTH_PASSWORD: ${{ secrets.MRT_BASIC_AUTH_PASSWORD }}
        shell: bash
        run: |
          set -ex
          echo "Preparing GitHub Pages directory..."
          pushd pages
          git config user.email "bot@github.com"
          git config user.name "bot"
          git fetch --unshallow
          git reset --hard 59696cbdf98b9db4acee061fdee27f9825963598
          git clean -fxd :/
          popd

          echo "Transforming sources..."
          npm install && mkdir dist
          npm run build
          cp dist/index.html pages/
          cp -r dist/assets pages/

          echo "Generating map..."
          cd generator
          chmod +x cicd_gen.sh
          ./cicd_gen.sh
          cp map.bin ../pages/
          cd ..

          echo "Placing public sources..."
          cp -r public/* pages/

          pushd pages
          git add .
          git commit --allow-empty -m "Generated at $(date -u +"%Y-%m-%dT%H:%M:%SZ")"
          git push --force origin pages
          popd
          # keepalive
          pushd .
          git config user.email "bot@github.com"
          git config user.name "bot"
          git reset --soft HEAD
          git commit --allow-empty -m "[skip ci] keepalive at $(date -u +"%Y-%m-%dT%H:%M:%SZ")"
          while ! git push origin main; do sleep 10; done
          git show --name-only |grep -Fq '[skip ci] keepalive at'
          git reset --soft HEAD~1
          while ! git push --force origin main; do sleep 10; done
          popd
